// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGE_Infrastructure.Data;

namespace SGE_Infrastructure.Migrations
{
    [DbContext(typeof(SGEContext))]
    [Migration("20181211004358_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("AlunoId");

                    b.HasIndex("CursoId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            CursoId = 1,
                            Email = "luciano.costa@gmail.com",
                            Nome = "Luciano"
                        });
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "DST"
                        });
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.CursoDisciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId");

                    b.Property<int>("DisciplinaId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("CursosDisciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CursoId = 1,
                            DisciplinaId = 1
                        });
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Disciplina", b =>
                {
                    b.Property<int>("DisciplinaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargaHoraria");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("DisciplinaId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            DisciplinaId = 1,
                            CargaHoraria = 0,
                            Descricao = "Desenvolvedor ......."
                        });
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(100)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            EnderecoId = 1,
                            AlunoId = 1,
                            Bairro = "Tres Barras",
                            CEP = "78058-549",
                            Logradouro = "Rua",
                            Numero = "29"
                        });
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("GradeId");

                    b.HasIndex("CursoId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            CursoId = 1,
                            Descricao = "jahajjhh"
                        });
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Aluno", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Curso", "Curso")
                        .WithMany("Aluno")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.CursoDisciplina", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Curso", "Curso")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.ApplicationCore.Entity.Disciplina", "Disciplina")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Aluno", "Aluno")
                        .WithOne("Endereco")
                        .HasForeignKey("SGE.ApplicationCore.Entity.Endereco", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Grade", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Curso", "Curso")
                        .WithMany("Grade")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
